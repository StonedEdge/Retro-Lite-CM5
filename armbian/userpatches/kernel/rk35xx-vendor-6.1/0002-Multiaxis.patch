diff --git a/drivers/hid/hid-input.c b/drivers/hid/hid-input.c
index 75a4d8d6bb0f..3a4914e8ef24 100644
--- a/drivers/hid/hid-input.c
+++ b/drivers/hid/hid-input.c
@@ -1204,8 +1204,13 @@ static void hidinput_configure_usage(struct hid_input *hidinput, struct hid_fiel
 			input_set_abs_params(input, usage->code, a, b, (b - a) >> 8, (b - a) >> 4);
 		else	input_set_abs_params(input, usage->code, a, b, 0, 0);
 
-		input_abs_set_res(input, usage->code,
-				  hidinput_calc_abs_res(field, usage->code));
+		if (field->application == HID_GD_MULTIAXIS)
+			input_abs_set_res(input, usage->code,
+					DIV_ROUND_CLOSEST(field->logical_maximum - field->logical_minimum,
+						field->physical_maximum - field->physical_minimum));
+		else
+			input_abs_set_res(input, usage->code,
+					hidinput_calc_abs_res(field, usage->code));
 
 		/* use a larger default input buffer for MT devices */
 		if (usage->code == ABS_MT_POSITION_X && input->hint_events_per_packet == 0)
@@ -1729,6 +1734,14 @@ static struct hid_input *hidinput_allocate(struct hid_device *hid,
 		case HID_GD_WIRELESS_RADIO_CTLS:
 			suffix = "Wireless Radio Control";
 			break;
+		case HID_GD_MULTIAXIS:
+			if ((hid->vendor == 0x2341 && hid->product == 0x8037) || (hid->vendor == 0xcafe && hid->product == 0x5005)) {
+				// __set_bit(EV_MSC, input_dev->evbit);
+				// __set_bit(MSC_TIMESTAMP, input_dev->mscbit);
+				__set_bit(INPUT_PROP_ACCELEROMETER, input_dev->propbit);
+				suffix = "Motion Sensors";
+			}
+			break;
 		case HID_GD_SYSTEM_MULTIAXIS:
 			suffix = "System Multi Axis";
 			break;
